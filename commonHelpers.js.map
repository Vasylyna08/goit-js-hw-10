{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst buttonEl = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nbuttonEl.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date().getTime()) {\n      buttonEl.disabled = true;\n      iziToast.show({\n        title: '❌',\n        message: 'Please choose a date in the future',\n        messageColor: '#fff',\n        messageSize: '16px',\n        position: 'topRight',\n        backgroundColor: '#EF4040',\n        close: false,\n        closeOnClick: true,\n      });\n    } else {\n      buttonEl.disabled = false;\n    }\n  },\n};\n\nflatpickr(inputEl, options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return value.toString().padStart(2, '0');\n}\n\nbuttonEl.addEventListener('click', onStartTimer);\n\nfunction onStartTimer() {\n  buttonEl.disabled = true;\n  inputEl.disabled = true;\n  const interval = setInterval(() => {\n    const diff = userSelectedDate - Date.now();\n    if (diff <= 1000) {\n      clearInterval(interval);\n      inputEl.disabled = false;\n    }\n    const time = convertMs(diff);\n    daysEl.textContent = addLeadingZero(time.days);\n    hoursEl.textContent = addLeadingZero(time.hours);\n    minutesEl.textContent = addLeadingZero(time.minutes);\n    secondsEl.textContent = addLeadingZero(time.seconds);\n  }, 1000);\n}\n"],"names":["inputEl","buttonEl","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","onStartTimer","interval","diff","time"],"mappings":"+IAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACJL,EAAS,SAAW,GAEpB,MAAMM,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,GAC7BF,GAAoB,IAAI,KAAM,EAAC,QAAO,GACxCL,EAAS,SAAW,GACpBQ,EAAS,KAAK,CACZ,MAAO,IACP,QAAS,qCACT,aAAc,OACd,YAAa,OACb,SAAU,WACV,gBAAiB,UACjB,MAAO,GACP,aAAc,EACtB,CAAO,GAEDR,EAAS,SAAW,EAEvB,CACH,EAEAS,EAAUV,EAASO,CAAO,EAE1B,SAASI,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAOA,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,CACzC,CAEAjB,EAAS,iBAAiB,QAASkB,CAAY,EAE/C,SAASA,GAAe,CACtBlB,EAAS,SAAW,GACpBD,EAAQ,SAAW,GACnB,MAAMoB,EAAW,YAAY,IAAM,CACjC,MAAMC,EAAOf,EAAmB,KAAK,IAAG,EACpCe,GAAQ,MACV,cAAcD,CAAQ,EACtBpB,EAAQ,SAAW,IAErB,MAAMsB,EAAOX,EAAUU,CAAI,EAC3BnB,EAAO,YAAce,EAAeK,EAAK,IAAI,EAC7CnB,EAAQ,YAAcc,EAAeK,EAAK,KAAK,EAC/ClB,EAAU,YAAca,EAAeK,EAAK,OAAO,EACnDjB,EAAU,YAAcY,EAAeK,EAAK,OAAO,CACpD,EAAE,GAAI,CACT"}